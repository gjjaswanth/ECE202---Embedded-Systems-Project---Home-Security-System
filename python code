import cv2​
import serial​
import time​
cap = cv2.VideoCapture(0)  # camera intilization​
previous_frame = None​
while True:​
    ret, frame = cap.read()​
    if not ret:​
        break​
    gray_frame = cv2.cvtColor(frame, cv2.COLOR_BGR2GRAY)  # converting frame to grayscale​
    gray_frame = cv2.GaussianBlur(gray_frame, (21, 21), 0)​
    if previous_frame is None:  # comparing with the initial frame​
        previous_frame = gray_frame​
        continue​
​
    frame_delta = cv2.absdiff(previous_frame, gray_frame)​
    thresh_frame = cv2.threshold(frame_delta, 25, 255, cv2.THRESH_BINARY)[1]​
    thresh_frame = cv2.dilate(thresh_frame, None, iterations=2)​
​
    contours, _ = cv2.findContours(thresh_frame.copy(), cv2.RETR_EXTERNAL, cv2.CHAIN_APPROX_SIMPLE)  #movement detection​

​
    motion_detected = False  # initially​
    for contour in contours:​
        if cv2.contourArea(contour) < 100:  # Ignore small movements​
            continue​
        motion_detected = True  # motion is detected​
        (x, y, w, h) = cv2.boundingRect(contour)​
        cv2.rectangle(frame, (x, y), (x + w, y + h), (0, 255, 0), 2)​
    if motion_detected:  # if motion is detected it saves the images​
        timestamp = time.time()​
        image_name = f"motion_{int(timestamp)}.jpg"​
        cv2.imwrite(image_name, frame)​
​
    cv2.imshow("Frame", frame)​
    previous_frame = gray_frame​
    if cv2.waitKey(1) & 0xFF == ord('q'):  # to exit press q​
        break​
cap.release()​
cv2.destroyAllWindows()​
​

​
